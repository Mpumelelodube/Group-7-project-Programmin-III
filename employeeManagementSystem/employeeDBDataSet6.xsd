<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="employeeDBDataSet6" targetNamespace="http://tempuri.org/employeeDBDataSet6.xsd" xmlns:mstns="http://tempuri.org/employeeDBDataSet6.xsd" xmlns="http://tempuri.org/employeeDBDataSet6.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="employeeDBConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="employeeDBConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.employeeManagementSystem.Properties.Settings.GlobalReference.Default.employeeDBConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="brachTableAdapter" GeneratorDataComponentClassName="brachTableAdapter" Name="brach" UserDataComponentName="brachTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="employeeDBConnectionString (Settings)" DbObjectName="employeeDB.dbo.brach" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[brach] WHERE (([brachID] = @Original_brachID) AND ((@IsNull_branchName = 1 AND [branchName] IS NULL) OR ([branchName] = @Original_branchName)) AND ((@IsNull_managerId = 1 AND [managerId] IS NULL) OR ([managerId] = @Original_managerId)))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_brachID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brachID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_branchName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="branchName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_branchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="branchName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_managerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="managerId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_managerId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="managerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[brach] ([brachID], [branchName], [managerId]) VALUES (@brachID, @branchName, @managerId);
SELECT brachID, branchName, managerId FROM brach WHERE (brachID = @brachID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@brachID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brachID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@branchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="branchName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@managerId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="managerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT brachID, branchName, managerId FROM dbo.brach</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[brach] SET [brachID] = @brachID, [branchName] = @branchName, [managerId] = @managerId WHERE (([brachID] = @Original_brachID) AND ((@IsNull_branchName = 1 AND [branchName] IS NULL) OR ([branchName] = @Original_branchName)) AND ((@IsNull_managerId = 1 AND [managerId] IS NULL) OR ([managerId] = @Original_managerId)));
SELECT brachID, branchName, managerId FROM brach WHERE (brachID = @brachID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@brachID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brachID" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@branchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="branchName" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@managerId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="managerId" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_brachID" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="brachID" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_branchName" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="branchName" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_branchName" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="branchName" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IsNull_managerId" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="managerId" SourceColumnNullMapping="true" SourceVersion="Original" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_managerId" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="managerId" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="brachID" DataSetColumn="brachID" />
              <Mapping SourceColumn="branchName" DataSetColumn="branchName" />
              <Mapping SourceColumn="managerId" DataSetColumn="managerId" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="employeeDBDataSet6" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="employeeDBDataSet6" msprop:Generator_UserDSName="employeeDBDataSet6">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="brach" msprop:Generator_TableClassName="brachDataTable" msprop:Generator_TableVarName="tablebrach" msprop:Generator_TablePropName="brach" msprop:Generator_RowDeletingName="brachRowDeleting" msprop:Generator_RowChangingName="brachRowChanging" msprop:Generator_RowEvHandlerName="brachRowChangeEventHandler" msprop:Generator_RowDeletedName="brachRowDeleted" msprop:Generator_UserTableName="brach" msprop:Generator_RowChangedName="brachRowChanged" msprop:Generator_RowEvArgName="brachRowChangeEvent" msprop:Generator_RowClassName="brachRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="brachID" msprop:Generator_ColumnVarNameInTable="columnbrachID" msprop:Generator_ColumnPropNameInRow="brachID" msprop:Generator_ColumnPropNameInTable="brachIDColumn" msprop:Generator_UserColumnName="brachID">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="branchName" msprop:Generator_ColumnVarNameInTable="columnbranchName" msprop:Generator_ColumnPropNameInRow="branchName" msprop:Generator_ColumnPropNameInTable="branchNameColumn" msprop:Generator_UserColumnName="branchName" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="20" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="managerId" msprop:Generator_ColumnVarNameInTable="columnmanagerId" msprop:Generator_ColumnPropNameInRow="managerId" msprop:Generator_ColumnPropNameInTable="managerIdColumn" msprop:Generator_UserColumnName="managerId" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:brach" />
      <xs:field xpath="mstns:brachID" />
    </xs:unique>
  </xs:element>
</xs:schema>